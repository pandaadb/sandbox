<?xml version="1.0" encoding="UTF-8"?>
<pmd>
    <useProjectRuleSet>false</useProjectRuleSet>
    <ruleSetFile>.ruleset</ruleSetFile>
    <excludePatterns/>
    <includePatterns/>
    <rules>
        <rule>
            <name>AvoidDeeplyNestedIfStmts</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>ExcessiveParameterList</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>ExcessivePublicCount</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>UnreachableCode</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>ConsistentReturn</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryParentheses</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryBlock</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>ReturnFromFinallyBlock</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>UnconditionalIfStatement</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>BooleanInstantiation</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>ClassCastExceptionWithToArray</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidDecimalLiteralsInBigDecimalConstructor</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>BrokenNullCheck</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>BigIntegerInstantiation</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingOctalValues</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingHardCodedIP</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>CheckResultSet</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidMultipleUnaryOperators</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>ExtendsObject</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>CheckSkipResult</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidBranchingStatementAsLastInLoop</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>DontUseFloatTypeForLoopIndices</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>ProperCloneImplementation</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>CloneThrowsCloneNotSupportedException</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>CloneMethodMustImplementCloneable</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>CloneMethodReturnTypeMustMatchClassName</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>CloneMethodMustBePublic</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>ExcessiveClassLength</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>CyclomaticComplexity</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryConstructor</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AssignmentInOperand</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>CallSuperInConstructor</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidLiteralsInIfCondition</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidReassigningParameters</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ConstructorCallsOverridableMethod</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>FinalFieldCouldBeStatic</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>CloseResource</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>DefaultLabelNotLastInSwitchStmt</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>BadComparison</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>EqualsNull</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>InstantiationToGetClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ImmutableField</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidProtectedFieldInFinalClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AssignmentToNonFinalStatic</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>MissingStaticMethodInNonInstantiatableClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidSynchronizedAtMethodLevel</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>MissingBreakInSwitch</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidInstanceofChecksInCatchClause</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AbstractClassWithoutAbstractMethod</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>CompareObjectsWithEquals</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryLocalBeforeReturn</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SingleMethodSingleton</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SingletonClassReturningNewInstance</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>PreserveStackTrace</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>UseCollectionIsEmpty</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ClassWithOnlyPrivateConstructorsShouldBeFinal</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>EmptyMethodInAbstractClassShouldBeAbstract</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SingularField</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ReturnEmptyArrayRatherThanNull</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AbstractClassWithoutAnyMethod</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>LogicInversion</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>UseVarargs</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>FieldDeclarationsShouldBeAtStartOfClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidProtectedMethodInFinalClassNotExtending</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ConstantsInInterface</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>EmptyCatchBlock</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyIfStmt</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyWhileStmt</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyTryBlock</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyFinallyBlock</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptySwitchStatements</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptySynchronizedBlock</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyStatementNotInLoop</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyInitializer</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyStatementBlock</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyStaticInitializer</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>DuplicateImports</name>
            <ruleset>Import Statements</ruleset>
        </rule>
        <rule>
            <name>UnusedImports</name>
            <ruleset>Import Statements</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryFullyQualifiedName</name>
            <ruleset>Import Statements</ruleset>
        </rule>
        <rule>
            <name>JUnitStaticSuite</name>
            <ruleset>JUnit</ruleset>
        </rule>
        <rule>
            <name>JUnitSpelling</name>
            <ruleset>JUnit</ruleset>
        </rule>
        <rule>
            <name>JUnitTestsShouldIncludeAssert</name>
            <ruleset>JUnit</ruleset>
        </rule>
        <rule>
            <name>MoreThanOneLogger</name>
            <ruleset>Java Logging</ruleset>
        </rule>
        <rule>
            <name>LoggerIsNotStaticFinal</name>
            <ruleset>Java Logging</ruleset>
        </rule>
        <rule>
            <name>SystemPrintln</name>
            <ruleset>Java Logging</ruleset>
        </rule>
        <rule>
            <name>AvoidPrintStackTrace</name>
            <ruleset>Java Logging</ruleset>
        </rule>
        <rule>
            <name>ReplaceVectorWithList</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>ReplaceHashtableWithMap</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>AvoidEnumAsIdentifier</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>AvoidAssertAsIdentifier</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>IntegerInstantiation</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>ByteInstantiation</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>ShortInstantiation</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>LongInstantiation</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>JUnitUseExpected</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>SuspiciousEqualsMethodName</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>LocalVariableCouldBeFinal</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>MethodArgumentCouldBeFinal</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>AvoidInstantiatingObjectsInLoops</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>UseArrayListInsteadOfVector</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>SimplifyStartsWith</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>UseStringBufferForStringAppends</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>UseArraysAsList</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryWrapperObjectCreation</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>AddEmptyString</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingThrowable</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingNPE</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>DoNotThrowExceptionInFinally</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidThrowingNewInstanceOfSameException</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingGenericException</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>StringInstantiation</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>StringToString</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>AppendCharacterWithChar</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>ConsecutiveAppendsShouldReuse</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>ConsecutiveLiteralAppends</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>UselessStringValueOf</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>StringBufferInstantiationWithChar</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>MethodReturnsInternalArray</name>
            <ruleset>Security Code Guidelines</ruleset>
        </rule>
        <rule>
            <name>ArrayIsStoredDirectly</name>
            <ruleset>Security Code Guidelines</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryConversionTemporary</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryFinalModifier</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>UselessOverridingMethod</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>UselessOperationOnImmutable</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>UselessParentheses</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryModifier</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>UnusedPrivateField</name>
            <ruleset>Unused Code</ruleset>
        </rule>
        <rule>
            <name>UnusedLocalVariable</name>
            <ruleset>Unused Code</ruleset>
        </rule>
        <rule>
            <name>UnusedPrivateMethod</name>
            <ruleset>Unused Code</ruleset>
        </rule>
        <rule>
            <name>ExcessiveMethodLength</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>test</name>
            <ruleset>JavaBeans</ruleset>
        </rule>
    </rules>
    <includeDerivedFiles>false</includeDerivedFiles>
    <violationsAsErrors>true</violationsAsErrors>
    <fullBuildEnabled>true</fullBuildEnabled>
</pmd>
